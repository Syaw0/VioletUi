.iconButton {
  --iconColor: #ffffff;
  --iconHoverColor: #ffffff;
  --iconClickColor: #ffffff;
  border: none;
  background-color: transparent;
  cursor: pointer;
  padding: 0.5rem;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: background-color 0.5s;
  position: relative;
  overflow: hidden;
}
.iconButton:hover {
  background-color: var(--iconHoverColor);
}

.iconButton:disabled {
  cursor: default;
}

.iconButton:disabled svg {
  fill: gray;
  stroke: gray;
}

.iconButton:disabled:hover {
  background-color: transparent;
}

.span {
  width: 10px;
  height: 10px;
  background-color: var(--iconClickColor);
  border-radius: 50%;
  position: absolute;
  width: 0;
  height: 0;
}

.primary {
  --iconColor: var(--primary);
  --iconHoverColor: var(--primary-container200);
  --iconClickColor: var(--primary-container500);
}

.secondary {
  --iconColor: var(--secondary);
  --iconHoverColor: var(--secondary-container200);
  --iconClickColor: var(--secondary-container500);
}

.tertiary {
  --iconColor: var(--tertiary);
  --iconHoverColor: var(--tertiary-container200);
  --iconClickColor: var(--tertiary-container500);
}

.error {
  --iconColor: var(--error);
  --iconHoverColor: var(--error-container200);
  --iconClickColor: var(--error-container500);
}

.iconButton {
  --containerColor: #111111;
  --labelColor: #111111;
  background-color: transparent;
  position: relative;

  background-color: transparent;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  overflow: hidden;
  border: none;
  transition: box-shadow ease 0.1s;
}
.container {
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 12px;
  background-color: var(--containerColor);
}

.icon svg {
  fill: var(--labelColor);
  stroke: var(--labelColor);
}
.small {
  height: 40px;
  width: 40px;
  border-radius: 12px;
}

.small svg {
  width: 24px;
  height: 24px;
}

.medium {
  height: 60px;
  width: 60px;
  border-radius: 20px;
}

.medium svg {
  width: 30px;
  height: 30px;
}

.large {
  height: 96px;
  width: 96px;
  border-radius: 28px;
}

.large svg {
  width: 36px;
  height: 36px;
}

.defaultShadow {
  box-shadow: var(--shadow3dp);
}
.smallShadow {
  box-shadow: var(--shadow1dp);
}

.content {
  position: relative;
  color: var(--labelColor);
  font-family: var(--md-sys-typescale-label-large-font-family-name);
  font-style: var(--md-sys-typescale-label-large-font-family-style);
  line-height: var(--md-sys-typescale-label-large-line-height);
  font-size: var(--md-sys-typescale-label-large-font-size);
  font-weight: var(--md-sys-typescale-label-large-font-weight);
  letter-spacing: var(--md-sys-typescale-label-large-letter-spacing);
  padding: 0px 16px;
}

.small {
  height: 40px;
  width: 40px;
  border-radius: 12px;
}

.small svg {
  width: 24px;
  height: 24px;
}

.medium {
  height: 60px;
  width: 60px;
  border-radius: 16px;
}

.medium svg {
  width: 30px;
  height: 30px;
}

.large {
  height: 96px;
  width: 96px;
  border-radius: 28px;
}

.large svg {
  width: 36px;
  height: 36px;
}

.withText {
  height: 56px;
  min-width: fit-content;
  border-radius: 16px;
}

.contentWithIcon {
  padding: 0px 16px 0px 10px;
}

.icon {
  position: relative;
}

.iconWithText {
  padding-left: 16px;
}
.iconWithText svg {
  width: 24px;
  height: 24px;
}

.primary {
  --containerColor: var(--md-sys-color-primary-container);
  --labelColor: var(--md-sys-color-on-primary-container);
}

.secondary {
  --containerColor: var(--md-sys-color-secondary-container);
  --labelColor: var(--md-sys-color-on-secondary-container);
}

.tertiary {
  --containerColor: var(--md-sys-color-tertiary-container);
  --labelColor: var(--md-sys-color-on-tertiary-container);
}

.error {
  --containerColor: var(--md-sys-color-error-container);
  --labelColor: var(--md-sys-color-on-error-container);
}

.warning {
  --containerColor: var(--md-sys-color-filledTonal-warning);
  --labelColor: var(--md-sys-color-on-filledTonal-warning);
}

.success {
  --containerColor: var(--md-sys-color-filledTonal-success);
  --labelColor: var(--md-sys-color-on-filledTonal-success);
}
